

1/24/18:
I left off making a /refresh end point  I should now test it

Should each request also invoke a refresh? If so, then I dont need a refresh command because any command will refresh



Next up:
--Work on match winning condition (now that I can use slash commands to test)


BUGS
-actions can interrupt stances: "Sindria's Arcane Bolt *interrupts* Miraxus of Keld's pending Defensive Stance!"
-Entering a combat stance does not remove previous combat stance
--Creating a new user sets slack_user_id equal to the user object id
--Claire is unable to equip the leather tunic



BACKLOG

Backlog (near term):
-Add backstory views
-Prevent traveling until character has set their name
-Prevent /name after initial naming

-Test all flows to ensure they still work
--Add a contextual image to actions screens
--Scrolling around avatar selections too many times fails (I should add "more" & "less" as reserved words for navigating avatars
--Move /command authentication to a middleware
--Add an icon for scrum-wars application
--Add token validation before processing any request
--Add more items
--Clean up views: profile (add exit button) - Exit button should be reusable and clear any interaction - ask slack what I can do for this
--Change images in class selection list - maybe class icons
--vendor sell item mechanic
--Add backstory
--Create frozen barrier action
--Fix poisoned blade effect.  Need to leverage action processor and remove actionEffectControllers completely


Backlog (long term):
--Determine how to display more than 5 actions types (may not need this for initial launch since classes only have a few actions each)
--create titles for menus (using an edited graphic menu header)
--Change to action point system (AP recharges per turn)
--Create basic attack for each character class
-----Should depend on equipped weapon's damage
--Fix hiding/stealth mechanic
----It should probably be added into character effects - In the future, I will list a character's effects
--Create a single action mapping file that can be used by actionQueue & selectActionTarget
--Use canvas or something like it to combine images rendered on the server and deliver that image to slack.  I.E inventory image with empty slots.
equip an item, then next time the image renders it will contain the item image equipped
--Questing mechanic using EQ style context terms: "Have you heard about [the missing child] from the town of beladore?"
--Generate .gif images to show animations in slack



Plot/Quest brainstorming:

"Tithes of _____"

King died and you have traveled to pay your respects.

King has summoned you to

